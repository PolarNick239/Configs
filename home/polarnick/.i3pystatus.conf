# -*- coding: utf-8 -*-

import subprocess

from i3pystatus import Status

status = Status(standalone=True)

# Shows pulseaudio default sink volume
#
# Note: requires libpulseaudio from PyPI
status.register("pulseaudio",
    format="{volume_bar} ♪",)

# Displays clock like this:
# Tue 30 Jul 11:59:46 PM KW31
#                          ^-- calendar week
status.register("clock",
    format="%a %-d %b %X",)

# Shows the average load of the last minute and the last 5 minutes
# (the default value for format is used)
status.register("load",
    format="Load: {avg1} {avg5}")

# Shows your CPU temperature, if you have a Intel CPU
status.register("temp",
    format="{temp:.0f}°C")

# This would look like this:
# Discharging 6h:51m
status.register("battery",
    format="{status} {remaining:%E%h:%M}",
    alert=True,
    alert_percentage=20,
    status={
        "DIS":  "Battery ⭣",
        "CHR":  "Battery ⭡",
        "FULL": "Battery ✔",
    },
    full_color="#AAFFAA",
    charging_color="#AAFFAA",)

# Shows the address and up/down state of eth0. If it is up the address is shown in
# green (the default value of color_up) and the CIDR-address is shown
# (i.e. 10.10.10.42/24).
# If it's down just the interface name (eth0) will be displayed in red
# (defaults of format_down and color_down)
#
# Note: the network module requires PyPI package netifaces
status.register("network",
    interface="eth0",
    format_up="E: {v4}",
    format_down="E: no",
    color_up="#AAAAFF",
    color_down="#FFAAAA",)

# Has all the options of the normal network and adds some wireless specific things
# like quality and network names.
#
# Note: requires both netifaces and basiciw
status.register("wireless",
    interface="wlan0",
    format_up="W: ({quality} at {essid}, {bitrate})",
    format_down = "W: no",
    color_up="#AAAAFF",
    color_down="#FFAAAA",)

# Shows disk usage of /
status.register("disk",
    path="/",
    format="{avail}G / {total}G",)

status.run()